import logging
import os
import re
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class ModerationBot:
    def __init__(self):
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
        self.token = os.environ.get('BOT_TOKEN')
        
        # –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ (–º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–∏)
        self.banned_words = [
            '—Å–ø–∞–º', '—Ä–µ–∫–ª–∞–º–∞', '–ø—Ä–æ–¥–∞–º', '–∫—É–ø–ª—é', '–∑–∞—Ä–∞–±–æ—Ç–æ–∫',
            '–º–ª–º', '–ø–∏—Ä–∞–º–∏–¥–∞', '–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏', '–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞'
        ]
        
        # –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        self.allowed_domains = ['youtube.com', 'youtu.be']
        
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /start"""
        await update.message.reply_text(
            "ü§ñ –ë–æ—Ç-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/start - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
            "/rules - –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞\n"
            "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏"
        )
    
    async def rules(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /rules"""
        rules_text = (
            "üìã –ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞:\n\n"
            "1Ô∏è‚É£ –ó–∞–ø—Ä–µ—â–µ–Ω —Å–ø–∞–º –∏ —Ä–µ–∫–ª–∞–º–∞\n"
            "2Ô∏è‚É£ –ó–∞–ø—Ä–µ—â–µ–Ω—ã –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è\n" 
            "3Ô∏è‚É£ –°—Å—ã–ª–∫–∏ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤\n"
            "4Ô∏è‚É£ –ë—É–¥—å—Ç–µ –≤–µ–∂–ª–∏–≤—ã –∏ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã\n\n"
            "–ó–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏–ª–∏ –±–∞–Ω ‚õî"
        )
        await update.message.reply_text(rules_text)
    
    async def moderate_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏"""
        message = update.message
        user = message.from_user
        text = message.text.lower() if message.text else ""
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
        for word in self.banned_words:
            if word in text:
                try:
                    await message.delete()
                    await context.bot.send_message(
                        chat_id=update.effective_chat.id,
                        text=f"‚ö†Ô∏è @{user.username or user.first_name}, —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ: –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞"
                    )
                    logger.info(f"–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user.username}: —Å–æ–¥–µ—Ä–∂–∏—Ç '{word}'")
                    return
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Å—ã–ª–∫–∏
        if re.search(r'http[s]?://|www\.', text):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –¥–æ–º–µ–Ω
            allowed = False
            for domain in self.allowed_domains:
                if domain in text:
                    allowed = True
                    break
            
            if not allowed:
                try:
                    await message.delete()
                    await context.bot.send_message(
                        chat_id=update.effective_chat.id,
                        text=f"üîó @{user.username or user.first_name}, —Å—Å—ã–ª–∫–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤"
                    )
                    logger.info(f"–£–¥–∞–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –æ—Ç {user.username}")
                    return
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ö–ê–ü–° (–º–Ω–æ–≥–æ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤)
        if len(text) > 10 and text.isupper():
            try:
                await message.delete()
                await context.bot.send_message(
                    chat_id=update.effective_chat.id,
                    text=f"üì¢ @{user.username or user.first_name}, –Ω–µ –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∫–∞–ø—Å–æ–º"
                )
                logger.info(f"–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–ø—Å–æ–º –æ—Ç {user.username}")
                return
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–ø—Å–∞: {e}")
    
    async def stats(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞"""
        await update.message.reply_text(
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:\n\n"
            "ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏—Å–ø—Ä–∞–≤–Ω–æ\n"
            "‚ö° –ü—Ä–æ–≤–µ—Ä—è—é –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
            "üõ°Ô∏è –ó–∞—â–∏—â–∞—é —á–∞—Ç –æ—Ç —Å–ø–∞–º–∞\n\n"
            "–í–µ—Ä—Å–∏—è: 1.0"
        )
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        if not self.token:
            logger.error("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é BOT_TOKEN")
            return
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        application = Application.builder().token(self.token).build()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        application.add_handler(CommandHandler("start", self.start))
        application.add_handler(CommandHandler("rules", self.rules))
        application.add_handler(CommandHandler("stats", self.stats))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        application.add_handler(
            MessageHandler(filters.TEXT & ~filters.COMMAND, self.moderate_message)
        )
        
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        application.run_polling(drop_pending_updates=True)

if __name__ == "__main__":
    bot = ModerationBot()
    bot.run()
